#Thanks to https://github.com/docker-library/drupal/blob/master/8.7/fpm-alpine/Dockerfile
FROM php:8.1-fpm-alpine

# install the PHP extensions we need
RUN set -eux; \
	\
	apk add --no-cache --virtual .build-deps \
		coreutils \
		freetype-dev \
		libjpeg-turbo-dev \
		libpng-dev \
		libzip-dev \
	; \
	\
	docker-php-ext-configure gd \
		--with-freetype=/usr/include \
		--with-jpeg=/usr/include \
	; \
	\
	docker-php-ext-install -j "$(nproc)" \
		gd \
		opcache \
		pdo_mysql \
		zip \
	; \
	\
	runDeps="$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \
			| tr ',' '\n' \
			| sort -u \
			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
	)"; \
	apk add --virtual .drupal-phpexts-rundeps $runDeps; \
  apk del .build-deps

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
RUN { \
		echo 'opcache.memory_consumption=128'; \
		echo 'opcache.interned_strings_buffer=8'; \
		echo 'opcache.max_accelerated_files=4000'; \
		echo 'opcache.revalidate_freq=60'; \
		echo 'opcache.fast_shutdown=1'; \
	} > /usr/local/etc/php/conf.d/opcache-recommended.ini

# install drush
RUN curl -sSL -o /usr/local/bin/composer https://getcomposer.org/download/latest-2.x/composer.phar && \
    chmod 755 /usr/local/bin/composer && \
    rm -rf /var/lib/apt/lists/*

# Set COMPOSER_HOME variable
ENV COMPOSER_HOME="/tmp/.composer"

COPY php.ini /usr/local/etc/php/conf.d/99-custom-php.ini

# Install nice to have packages
RUN apk add --no-cache patch mariadb-client

COPY nginx/app /var/www/html/web

RUN chown -R www-data:www-data /var/www/html/web

WORKDIR /var/www/html